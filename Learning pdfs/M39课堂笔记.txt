20190918
命令列表
a
aide --check --init --update 
awk
alias 
apt apg-get 
at
atq
atrm 
b
bzip 
bunzip
bzcat 
bzip2
bunzip2
bc 
bash
basename 
blkid 
brctl 
batch 
bg
break
busybox
c
cat /etc/redhat-release /etc/motd 
cd 
clock hwclock 
command alias 
cal 9 1752
clear ctrl+l 
cp -av -r -p -i -b -u --backup=numbered 
chattr
chmod 
chown
chgrp
chage
chfn
chsh 
chpasswd 
cut
cpio
compress uncompress  
case  in  easc 
createrepo 
./configure 脚本
curl 
crontab -e -r -l -u 
continue
chroot /mnt/sysimage
chkconfig --list --add -del 
d
dd 
du 
df 
date
dirname
dnf install remove repolist list search groupinstall grouplist info history 
diff 
declare -i -r -x 
du -sh 
dnf 
dpkg ubuntu rpm 
dmesg
dumpe2fs 
dstat 
e
echo $SHELL $PATH @PS1
enable
exit
export 
expr 
egrep = grep -E 扩展正则表达式
eject 
e2label 
expect 
eval 

f
free
file
finger 
fgrep = grep -F
find 
fdisk 
fsck 
findmnt 
fuser 
fg 
for NAME in list ;do cmd;done 
for((expr1;expr2;expr3));do cmd;done 
function 
g
gedit
groups
groupmems
gpasswd
groupadd
groupmod
groupdel
grpck
getent passwd|shadow|group|gshadow xxx 
getenforce  /etc/selinux/config disabled 
grep 
getfacl 
gzip 
gunzip 
gcc 
gdisk 
getconf -a 
glances 
grub
grub-install 
grub2-set-default 
grub2-setpassword
grub2-mkconfig 
grub2-install
gpg 
h
hash
hostname
hostnamectl set-hostname status 
halt
history
hexdump
help 内部命令
head 
htop
i
init 0 6 3 5 
ip a 
id wang 
info ls
if else elif  fi 
ifconfig 
iostat
iftop
iotop 
install 
insmod 
iptables 
j
jobs
k
kill
killall
l
lsb_release -a 
ls 
lscpu
lsblk
logout
ln -s 
lsattr 
less 
let 
locate 
ldd /bin/ls 
lvcreate
lvs
lvdisplay 
lsof 
lvextend 
lvreduce
lvremove 
lvconvert --merge 
local 
lspci
lsusb 
lsmod 
lastb 
m
more 
mv
man 
mandb centos7 
makewhatis  centos6
mkdir -pv
mount 
mail 
make &&  make install
mountpoint  
mkfs -t xfs 
mount   /etc/fstab
mkswap  
mkisofs 
mpstat
mktemp
mkinitrd 
modinfo ext4 
modprobe -r 
md5sum
n
nano
newgrp
newusers
nl cat -b 
ntpdate 
nmcli 
nmtui 
netstat
nohup 
nice 
nload 
ntsysv --level 3 
o
od 
openssl 
p
poweroff 
pwd
passwd 
pwunconv
pwconv 
patch 
paste 
pvcreate 
pvs 
pvdisplay
parted 
partx 
pvmove 
pvremove 
partprobe 
pstree -p 
pkill
pgrep 
ps
pidof 
pmap 
ping 
pssh 
q
quit
r
runlevel 
reboot
reset
rpm
rmdir
rm -rf /*
rename 
readelf 
rz
rev 
read 
rpm 
rpm2cpio 
route 
renice 
return 
resize2fs 
rsync 
s
su
seq 
sudo 
screen
source . 
shutdown 
ssh IP
sleep N
stat file 
shred 
set +C 
sz 
setup
sort 
setfacl
setenforce 0|1 
sestatus 
scp 
split 
sed 
systemctl disable --now firewalld  systemctl enable --now autofs start | stop |restart | get-default | set-default | is-active| is-enable | mask |unmask | isolate | list-units -a |  daemon-reload 
swapon 
swapoff 
systemd-analyze plot > boot.html
sysctl -p -w  -a  /etc/sysctl.conf 
ss 
select PS3 REPLY 
sha1sum     sha224sum   sha256sum   sha384sum   sha512sum
sshpass 
ssh-keygen
ssh-copy-id
ssh-agent bash
ssh-add 
sshfs 
t
tr
tee
tty
tree 
type 
touch 
timedatectl 
tac 
tail 
tailf 
tar 
time 
tune2fs 
top 
trap 
tcpdmatch
u
unalias
useradd
usermod
userdel 
umask 
uniq 
unset 
updatedb
unxz 
unzip  
uuidgen 
umount
uuidgen
uptime 
usleep 
v
vi
vim 
vipw
vigrp 
vgcreate
vgs
vgdisplay
vgreduce
vgextend 
vgremove
vmstat  
visudo export EDITOR=vim 
sudoedit 
w
whoami
who am i
who 
w
which
whereis
whatis 
wc 
wget
wait  
wall 
while cmd;do cmds done 
while read NAME ;do done < file 
x
xxd 
xclock 
xz
xzcat 
xargs 
xfs_replair
xfs_info 
xfs_growfs
x86info 
y
yum install xclock remove repolist list 
z
zip 
zcat 






computer 


十进制
0-9 10

二进制
0，1 ，10

00000000   0   
00000001   1  2^0
00000010   2  2^1
00000100   4  2^2
00001000   8  2^3
00010000   16 2^4
00100000   32 2^5
01000000   64 2^6
10000000   1282^7

2^8  256
2^9  512
2^10 1024

97-64=33-32=1

01100001   a 

169 --->
169-128=41-32=9-8=1

10101001

101 ---> 5
2^2+1=5

10101000=128+32+8=168



八进制

0-7 10 


十六进制：一个十六进制相当4位二进制

0，9 ，A，B,C，D,E,F  10

15 十进制

1111  F


b bit 比特 位  0，1 
B byte 字节，八个二进制位 

00000000 0

11111111 255


1K=2^10=1024 			    10^3=1000 
1M=1024K=2^20 				10^6
G=1024M=2^30
T=1024G
P,E,Z,Y,B,N,D


时间
s
ms
us 
ns
ps
fs   


add == 10101010

编码


去IOE:IBM，ORACLE,EMC 

c/S  Client Server

cyrix 威盛 x86 



CISC:复杂   add 10101010 x86
RISC:精减

ARM：高通，A13，麒麟
RISC-V: 开源
MIPS：龙芯



实模式：1M 20bit 
保护模式：

unix
linux


原理：冯诺依曼

实验：二进制和十进制转换

了解：服务器硬件组成

操作系统：OS，了解

Unix起源：

Linux各种版本


ftp://172.20.0.1/pub/ISOs/CentOS/


硬盘文件：
/dev/sda
/dev/sdb

IDE
SCSI

SATA
SAS 


分区类型：
主分区：一块硬盘，最多分4个  /dev/sda1-4 
扩展分区：可有可无，一块硬盘最多有一个扩展分区，不直接存放数据，划分成更小的分区（逻辑分区） 扩展+主分区《=4  /dev/sda1-4
逻辑分区： /dev/sda5 /dev/sda6...



分区f: ----> c:/f  mount 挂载   mount point 挂载点
/dev/sda1  mount  / 
/dev/sda2  mount /home


200G
/       100G
/boot   1G
/data   50G
swap交换 2G 

administrator windows
root          linux 

proxy 代理

/root 
/home/wang
/home/mage


实验：centos7,6,ubuntu 安装，并且用xshell连接执行命令

实验：基本小命令

理论：别名---> 内部命令--->hash外部命令--->$PATH--->command not found

1
12
21
32
39
46



0000000 

1100001 a

1111111

`` $(cmd)：当一个命令想引用cmd的执行结果时，可以采有前面的用法 

cat /dev/null > /boot/bigfile 
rm -f /boot/bigfile


[root@centos8 data]# touch f{1..10}.txt
[root@centos8 data]# ls
f10.txt  f1.txt  f2.txt  f3.txt  f4.txt  f5.txt  f6.txt  f7.txt  f8.txt  f9.txt
[root@centos8 data]# type rename 
rename is /usr/bin/rename
[root@centos8 data]# rename txt txt.bak f*
[root@centos8 data]# ls
f10.txt.bak  f2.txt.bak  f4.txt.bak  f6.txt.bak  f8.txt.bak
f1.txt.bak   f3.txt.bak  f5.txt.bak  f7.txt.bak  f9.txt.bak
[root@centos8 data]# rename txt.bak txt *
[root@centos8 data]# ls
f10.txt  f1.txt  f2.txt  f3.txt  f4.txt  f5.txt  f6.txt  f7.txt  f8.txt  f9.txt


理论：硬链接和软链接的区别
1本质：
硬：本质是同一个文件
软：本质不是同一个文件
2跨分区
3inode
4链接数
5文件夹
6相对路径
7删除原文件
8文件类型 


[root@centos8 ~]#ls /data /xxx > /data/all2.log 2>&1
[root@centos8 ~]#ls /data /xxx 2> /data/all4.log 1>&2
[root@centos8 ~]#ls /data /xxx &> /data/all.log 
[root@centos8 ~]#ls /data /xxx 2>&1 > /data/all3.log
ls: cannot access '/xxx': No such file or directory


实验：touch cp mv rm tree mkdir rmdir file vim > 2> &> 2>&1 ln -s 


主（要）组：一个用户必须属于一个组做为主组
辅助组：可有可无，可以多个，附加组，附属组


wang 


cat  /etc/issue
nano  /etc/issue

实验：救援模式恢复破坏的系统配置文件

Windows2008
flzx3000c



r：read 
w: write 
x: excute

who: u,g,o,a
opt: +,-,=
per: r,w,x

chmod who opt per file

面试题：
cp /etc/issue  /data/dir 需要的最小权限
1)cp?
2)/etc/  /etc/issue
3)/data/ /data/dir 

r:4
w:2
x:1

rwx rw- r--  file
111 110 100
764 

rwx:7
rw-:6
r--:4 
r-x:5
---:0 

umask+default=777(dir)|666(file)

umask功能：将对应的权限位遮掩住，666|777 umask=000,新建文件基于安全原因，不允许有执行权限

默认权限：
目录=777-umask
文件=666-umask，观察结果有奇数+1
666
123
5

110110110
001010011
110100100


sgid:
1作用在可执行二进制程序上
2作用在目录：在此目录中新建文件的所属组将自动继承此目录的所属组


重点：
1 输入的重定向 < 
2 多行重定向 <<EOF 
3 管道 | 
4 useradd userdel groupadd groupdel chown chgrp chmod groups id 


正则表达式，重点难点
脚本：重点难点



mask: 设置除所有者和other以外的用户或组的最高权限

所有者，ACL中自定义用户，ACL自定义的组，所属组，other 


[root@centos7 data]#cut -d" " -f1 access_log |sort |uniq -c |sort -nr|head -n3
   4870 172.20.116.228
   3429 172.20.116.208
   2834 172.20.0.222
   
[root@centos8 data]#tr -s " "  : <  ss.log |cut -d: -f6|sort |uniq -c |sort -nr|head -3
     44 127.0.0.1
     10 113.234.28.244
      8 124.64.18.135



[root@centos8 data]#cat f1.log f2.log |sort |uniq -d
a
c
d
[root@centos8 data]#grep -f f1.log f2.log
a
c
d


[root@centos8 data]#cat f1.log f2.log |sort |uniq -u
1
2
3
4
b
e

grep -v "^[[:space:]]*#" /etc/httpd/conf/httpd.conf  |grep -v "^$"
grep -v "^\( *#\|$\)" /etc/httpd/conf/httpd.conf
grep -Ev "^( *#|$)" /etc/httpd/conf/httpd.conf




[root@centos8 data]#grep "^\(.*\)\>.*\<\1$" /etc/passwd
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
bash:x:1008:1008::/home/bash:/bin/bash
nologin:x:1011:1011::/home/nologin:/sbin/nologin


[root@centos8 data]#grep -E "^(.*)\>.*\<\1$" /etc/passwd
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
bash:x:1008:1008::/home/bash:/bin/bash
nologin:x:1011:1011::/home/nologin:/sbin/nologin
[root@centos8 data]#egrep  "^(.*)\>.*\<\1$" /etc/passwd
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
bash:x:1008:1008::/home/bash:/bin/bash
nologin:x:1011:1011::/home/nologin:/sbin/nologin

[0-9] [[:digit:]]
[1-9][0-9]
1[0-9]{2}
2[0-4][0-9]
25[0-5]

(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])

ifconfig eth0 | grep -Eo  "(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])" |head -n1

[root@centos8 script39]#echo -e "\033[1;$[RANDOM%7+31]mCOLOR\033[0m"


student_name
StudentName
studentName


正则表达式表示
1、QQ号
2、身份证号
3、邮箱
4、邮政编码

10&12

1010
1100
1000

10|12
1010
1100
1110

1^1=0
1^0=1


10^12

1010 10
1100 12
0110


1100 12
0110  6
1010  10

0110  6
1010  10
1100  12

[root@centos8 ~]#A=100;B=200;((A=A^B));((B=A^B));((A=A^B));echo A=$A; echo B=$B
A=200
B=100


cmd1 && cmd2 短路与
如果 cmd1 成功，则执行 cmd2，如果cmd1 失败，则无需执行cmd2

cmd1 || cmd2 短路或
如果 cmd1 成功，则无需执行 cmd2，如果cmd1 失败，则执行cmd2

[root@centos8 ~]#HOST=172.30.0.100; ping -W1 -c1 $HOST &> /dev/null && echo $HOST is accessable　||  echo $HOST is not  accessable
172.30.0.100 is accessable

[root@centos8 ~]#HOST=172.30.0.100; ping -W1 -c1 $HOST &> /dev/null || echo $HOST is not accessable　&&   echo $HOST is  accessable
172.30.0.100 is accessable
[root@centos8 ~]#HOST=172.30.0.111; ping -W1 -c1 $HOST &> /dev/null || echo $HOST is not accessable　&&   echo $HOST is  accessable
172.30.0.111 is not accessable　
172.30.0.111 is accessable

[root@centos8 script39]#FILE=hello.sh; [[ "$FILE" =~ \.(sh|txt)$ ]] && echo txt or sh file
txt or sh file

[root@centos8 script39]#echo mage ceo | { read NAME TITLE; echo $NAME $TITLE; }
mage ceo

read -p "请输入体重(kg): " WEIGHT
read -p "请输入身高(m): " HIGTH
BMI=`echo $WEIGHT/$HIGTH^2 |bc`
if [ $BMI -lt 18 ] ;then
	echo "偏瘦"
elif  [ $BMI -lt 24 ] ;then
	echo "标准身材"
elif  [ $BMI -lt 27 ] ;then
	echo "偏胖"
elif [ $BMI -lt 30 ] ;then
	echo "肥胖"
else
	echo "太胖了！"
fi



牛肉面 和 石锅拌饭 20 
拉面 刀削面 蛋炒饭 15 
汉堡王 30 

if 1 or 2  
	echo 20 
elif  menu=3 or  menu=4 or menu=5 
	echo 15 
	
1+2*3

[root@centos8 linux-5.3.5]#cat `find  -name "*.c" ` |wc -l
18744090
[root@centos8 linux-5.3.5]#find  -name "*.c" |xargs -n1 cat |wc -l
18744090
[root@centos8 linux-5.3.5]#find  -name "*.c" |xargs  cat |wc -l
18744090


[root@centos8 ~]#ifconfig eth0|sed -n '2s@.*inet @@p'|sed -n 's/ net.*//p'
192.168.39.8 


[root@centos8 ~]#ifconfig eth0|sed -ne '2s@.*inet @@' -e  's/ net.*//p'
192.168.39.8 

[root@centos8 ~]#ifconfig eth0|sed -nr '2s@(.*inet )(.*)( netmask.*)@\3@p'
 netmask 255.255.255.0  broadcast 192.168.39.255
[root@centos8 ~]#ifconfig eth0|sed -nr '2s@.*inet (.*) netmask.*@\1@p'
192.168.39.8

[root@centos8 ~]#ifconfig eth0|sed -nr '2s@[^0-9]+([.0-9]{7,15}).*@\1@p'
192.168.39.8
[root@centos8 ~]#ifconfig eth0|sed -nr '2s@[^0-9]+([.0-9]+).*@\1@p'
192.168.39.8

[root@centos8 ~]#echo /etc/sysconfig/network-scripts/ | sed -nr 's#^(/.*/)([^/]+)/?#\1#p'
/etc/sysconfig/
[root@centos8 ~]#echo /etc/sysconfig/network-scripts/ | sed -nr 's#^(/.*/)([^/]+)/?#\2#p'
network-scripts


实验：修改centos7,8的网卡为传统网卡名eth0,1
sed -ri '/GRUB_CMDLINE_LINUX/s@^(.*)"@\1 net.ifnames"@' /etc/default/grub
sed -ir '/GRUB_CMDLINE_LINUX/s@"$@ net.ifnames=0"@' /etc/default/grub

grub2-mkconfig -o /etc/grub2.cfg


sed  -r  '/^(#|$)/d'  /etc/httpd/conf/httpd.conf
sed  -r  '/^#|^$/d'  /etc/httpd/conf/httpd.conf 

sed -n  '/24\/May\/2018:11:56:30/,/24\/May\/2018:11:56:40/p' access_log


[root@centos8 ~]#seq 10 | sed -n 'n;p'
2
4
6
8
10


find  -name "*.rpm"  | sed -rn 's#.*\.([^.]+)\.rpm#\1#p'|sort | uniq -c
[root@centos8 cd]#find  -name "*.rpm" | rev |cut -d. -f2|rev|sort | uniq -c
   1254 i686
   2111 noarch
   3303 x86_64
   
   https://www.elrepo.org/elrepo-release-8.0-2.el8.elrepo.noarch.rpm
   https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm
   
rpm -ivh  -e  -ql -qi -qf -q --scripts -qa -qp --force --nodeps 

实验：删除虚拟网卡
yum remove libvirt-daemon 


https://mirrors.aliyun.com/centos/6/os/x86_64/
https://mirrors.aliyun.com/centos/7/os/x86_64/


baseurl=https://mirrors.aliyun.com/centos/$releasever/os/$basearch

实验:yum仓库：本地光盘，基于网络http服务


dnf|yum install remove list search info clean all repolist 

故障排错：troubleshooting: yum dnf失败原因
1，yum的配置文件格式或路径
2，cacche ，yum clean all
3，网络不通，网卡配置


实验：将dnf相关的包，建立自定义的yum仓库

实验:编译安装tree1.8，并实现一键编译安装install_tree.sh 

1 安装相关的依赖包
dnf install gcc 

2 下载源码并解压
tar xvf tree-1.8.0.tgz

3 进入解压缩的目录，README和INSTALL 
cd tree-1.8.0/
cat README INSTALL 

4 vim Makefile
prefix = /app/tree

5 make 
 
6 make install 安装，复制对应的目录下

7 配置PATH
vim  /etc/profile.d/tree.sh 
PATH=/app/tree/bin:$PATH

. /etc/profile.d/tree.sh

实验：cmatrix编译安装
1 安装包
dnf install make ncurses-devel

2 下载并解压缩包
 tar xvf cmatrix-1.2a.tar.gz
 
3 配置 
 ./configure --prefix=/app/matrix

4 编译并安装
make &&  make install 

5 配置环境
echo 'PATH=/app/matrix/bin:$PATH' > /etc/profile.d/matrix.sh
. /etc/profile.d/matrix.sh

6运行
cmatrix -a -b -C yellow


实验：centos8 编译安装httpd-2.4.41,并实现一键安装脚本install_httpd.sh

1 安装包
dnf install gcc make apr-devel apr-util-devel pcre-devel openssl-devel

2 下载并解压缩包
tar xvf httpd-2.4.41.tar.bz2
 
3 配置 
cd httpd-2.4.41/
./configure --prefix=/app/apache --sysconfdir=/etc/apache --enable-ssl

4 编译并安装
make -j 4 &&  make install 

5 配置环境
echo 'PATH=/app/apache/bin:$PATH' > /etc/profile.d/apache.sh
. /etc/profile.d/apache.sh

6运行
apachectl 

7 指定用apache用户运行
useradd -r -s /sbin/nologin apache
vim /etc/apache/httpd.conf
user apache
group apache

apachectl stop
apachectl
ps aux 查看

http://192.168.39.8


for i in `ls /sys/class/scsi_host/host* -d`;do echo '- - -' > $i/scan;done


255 heads, 63 sectors/track, 26108 cylinders
chs:cylinders,head,sector


实验：ubuntu  dpkg apt 

理论：head track sector cylinder 

理论：MBR结构，GPT

实验：备份mbr，破坏MBR并恢复之 

实验：分区退出后一定同步分区表
centos6 
增加分区的同步法
partx -a /dev/sda 
删除分区同步法
partx -d --nr 6-8 /dev/sda

除了centos6其它版本，同步方法
partprobe 


/dev/sdb1  /mnt/sdb1 
mkdir /mnt/sdb1/dir1 
mount /dev/sdb1  /mnt/sdb1/dir1 

OOM out of Memory 

分区创建
 

实验：从分区，格式化，挂载（持久）

实验：swap分区管理

实验：lvs 实现

实验：扩展LV
对ext系列
lvextend -l +100%free /dev/vg0/mysql
resize2fs /dev/vg0/mysql 
对xfs
lvextend  -l +100 /dev/vg0/binlog
xfs_growfs /mnt/binlog

对ext和xfs都支持
lvextend  -L +1G -r /dev/vg0/mysql 

实验：离线缩减LV，针对ext
 umount /mnt/mysql
 fsck -f /dev/vg0/mysql
 resize2fs /dev/vg0/mysql  5G
 lvreduce -L 5G /dev/vg0/mysql 
 mount -a

实验：删除LV中硬盘
pvmove /dev/sdd
vgreduce vg0 /dev/sdd
pvremove /dev/sdd


实验：初始环境要求
systemctl disable firwalld centos7,8
chkconfig iptables off  centos6 

vim /etc/selinux/config
SELINUX=disabled 


实验：ext4快照实现
lvcreate  -n mysql_snapshot -s -L 1G /dev/vg0/mysql
mount -r /dev/vg0/mysql_snapshot  /mnt/mysql_snapshot
还原逻辑卷
umount /mnt/mysql 
umount /mnt/mysql_snapshot 
lvconvert --merge /dev/vg0/mysql_snapshot


xfs文件系统
lvcreate  -n binlog_snapshot -L 1G  -s /dev/vg0/binlog
mount -r -o  nouuid  /dev/vg0/binlog_snapshot /mnt/binlog_snapshot/

umount /mnt/binlog
umount /mnt/binlog_snapshot 
lvconvert  --merge /dev/vg0/binlog_snapshot



switch 
router 


ISO  
OSI 
IOS


单工：单向传输 ------>
半双工:轮流双向传输----> <-----
全双工:同时双向传输 <---->

单播：目标是一个unicast
广播：目标是所有 broadcast
多播（组）：目标是多个（加入组） multicast

media access control MAC 物理地址


冲突域
广播域：

novell 网络 netware OS ipx/spx 
windows nt tcp/ip 
http://www.magedu.com/

DDos 拒绝服务

0086 010  62985600 网络ID
62985600 主机ID

192.168.39.8 
网络ID+主机ID

A类
0XXXXXXX.X.Y.Z
00000000 0
01111111 127
1-126.X.Y.Z

最高8位是网络ID
后续24位是主机ID
netmask:255.0.0.0

10.0.0.100
10.0.0.200
8.8.8.8
10.0.0.1-10.255.255.254
一个A网络的最多的主机数=2^24-2=16777214

一个网络的最多的主机数＝2^主机ID位数-2

B类
10XXXXXX.XXXXXXXX.Y.Z
2^14=16384
10000000 128
10111111  191
128-191.X.Y.Z

最高16位是网络ID
后续16位是主机ID
netmask:255.255.0.0
一个B网络的最多的主机数网络的最多的主机数=2^16-2=65534

C类
110XXXXX.XXXXXXXX.XXXXXXXX.Z
网段数：2097152
11000000 192
11011111  223
192-223.X.Y.Z

最高24位是网络ID
后续8位是主机ID
netmask:255.255.255.0
一个C网络的最多的主机数网络的最多的主机数网络的最多的主机数网络的最多的主机数=2^8-2=254


D类多播地址
1110XXXX.X.Y.Z
224-239.X.Y.Z

E类
240-255



无类：网络ID位不确定
子网掩码：32bit 二进制数字，和IP成对使用，对应于IP中网络ID相应的位为1，对应于主机ID相应的位为0

A：8
B：16
C:24

32-11=21

2000台netmask=255.255.248.0

172.30.123.100/21
255.255.248.0 
172.30.120.0  netid
10101100
11111111

01111011
11111000
01111000


A:192.168.39.100/24 netid=192.168.39.0
B:192.168.38.200/16 netid=192.168.38.0

A--->B
1)192.168.39.0
2)192.168.38.200 与 24=192.168.38.0

B---->A
192.168.38.200/16  192.168.0.0
192.168.39.100/16  192.168.0.0



1 判断是否在一个网段
2 路由？
3 ARP
4 三次握手
5 DATA



10.00000000.0.0
10.0.0.1-10.255.255.254
10.0.0.0/8

10.00000  000.0.0  10.0.0.0/9
10.01 000000.0.0  10.128.0.0/9
10.10 000000.0.0
10.11 000000.0.0

公式：
一个网络的最多的主机数＝2^主机ID位数-2
网络（段）数=2^网络ID中可变的位数
网络ID=IP与netmask
CIDR无类域间路由表示法：IP/网络ID位数
判断对方主机是否在同一个网段：用自已的子网掩码分别和自已的IP及对方的IP相与，比较结果，相同则同一网络，不同则不同网段
划分子网：将一个大的网络（主机数多）划分成多个小的网络（主机数少），主机ID位数变少，网络ID位数变多，网络ID位向主机ID位借位
合并超网：将多个小网络合并成一个大网，主机ID位向网络ID位借位

中国移动10.0.0.0/8 给32个各省公司划分对应的子网
1）每个省公司的子网的netmask？
2^5>=32 借5位网络ID
8+5=13
255.248.0.0
2)每个省公司的子网的主机数有多少？
2^(32-13)-2=524286
3）河南省得到第10个子网，网络ID？
10.00000 000.0.0/13 
10.01001 000.0.0/13 
10.72.0.0/13 

4）河南省得到第10个子网的最小IP和最大的IP？
10.01001 000.0.1
10.01001 111.11111111.11111110

10.72.0.1---10.79.255.254


5）所有子网中最大，最小的子网的netid？
10.00000 000.0.0/13 10.0.0.0/13
10.11111 000.0.0/13 10.248.0.0/13


中国移动10.0.0.0/8 给32个各省公司划分对应的子网,河南省得到第10个子网,再给省内的16个地市划分子网
1）每个市公司的子网的netmask？
2)每个市公司的子网的主机数有多少？
3）各地市的最小netid和最大的netid？
4）洛阳市第2个子网，最小IP和最大IP？


220.78.10101 000.0
220.78.10101 001.0


220.78.10101 111.0

220.78.168.0/21

220.78.169.0
220.78.170.0
220.78.171.0
220.78.172.0
220.78.173.0
220.78.174.0
220.78.175.0


172.0001 0000.0.0/16
172.0001 0001.0.0/16
172.0001 0010.0.0/16


172.0001 1111.0.0/16

172.16.0.0/12


路由表：一行即为一条路由记录，每条记录路由
Destination：目标网络ID，主机ip,0.0.0.0/0 默认路由   
Genmask：netmask
Iface：接口，表示从当前设备哪个网卡发出去，才能到达Destination
Gateway: 交给下一个路由器邻近当前设备的接口IP
Metric：花费，越小优先越高


实验：实现路由

环境：四台主机
A---R1----R2----B
A
ifconfig eth0 172.20.0.8/16
route add -net 172.20.0.0/16 dev eth0
route add default gw 172.20.0.111 dev eth0
route -n 
ip a 

R1
ifconfig eth0 172.20.0.111/16
ifconfig eth1 10.0.0.1/8
route add -net 172.20.0.0/16 dev eth0
route add -net 10.0.0.0/8 dev eth1
route add -net 192.168.39.0/24 gw 10.0.0.2 dev eth1 
echo 1 > /proc/sys/net/ipv4/ip_forward 

R2
ifconfig eth0 192.168.39.111/24
ifconfig eth1 10.0.0.2/8
route add -net 192.168.39.0/24 dev eth0
route add -net 10.0.0.0/8 dev eth1
route add -net 172.20.0.0/16 gw 10.0.0.1 dev eth1 
echo 1 > /proc/sys/net/ipv4/ip_forward 


B
ifconfig eth0 192.168.39.6/24
route add -net 192.168.39.0/24 dev eth0
route add default gw 192.168.39.111 dev eth0
route -n 
ip a 


实验：/etc/sysconfig/network-scripts/ifcfg-xxx


实验：多网卡bonding


实验：桥接


实验：ubuntu网卡设置 

buffer 缓冲区，写
cache 缓存，读

内存泄露： asp  php NT4.0 windows2000
内存溢出: 10M 11Mdata

实验：性能工具ps pgrep pkill iostat iostat nload 

实验：at 

实验：crond 
PATH

实验：for 


{ ping -c3 127.1;ping 127.2; }& { ping -c3 127.3;ping 127.4; }&

实验：批量修改文件
方法1
DIR=/data/script39/test
cd $DIR
for FILE in *;do
	NAME=`echo $FILE | sed -rn 's/(.*)\.(.*)/\1/p'`
#	SUFFIX=`echo $FILE | sed -rn 's/(.*)\.(.*)/\2/p'`
	mv $FILE $NAME.jpg
done

方法2
for suffix in `ls * | sed  -rn 's/.*(\..*)/\1/p' |sort -u`;do rename $suffix .jpg *$suffix;done

九九乘法表
1 九行，大循环9次，第N次循环打印第N行
for i in {1..9};do
	for j in `seq $i`;do
		echo -e "$jx$i=$[i*j]\t\c"
	done
	echo 
done
2 打印第N行，公式个数=N，小循环实现N次

3 每个公式中，第1个数字=小循环的当前次数，每2个数字=当前行号第N行，第3个数字=第1数字X第2个数字

scp yyyy-mm-dd.sh wang@172.20.0.8:/data/script39/


面试：
要求将目录YYYY-MM-DD/中所有文件，移动到YYYY-MM/DD/下 
2019-10-28/a,b,c
2019-10/28/a,b,c

1 yyyy-mm-dd10.sh 创建YYYY-MM-DD，当前日期一年前365天到目前共365个目录，里面有10个文件，$RANDOM.log 
date -d '-1 day' +%F
[root@centos8 script39]#cat dir20.sh 
#!/bin/bash
#
#********************************************************************
#Author:		kjAlbert
#Date:			2019-10-27
#FileName： 		dir.sh
#Description:		The test script
#Copyright (C): 	2019 All rights reserved
#********************************************************************
#
for i in {1..365};do 
	DIR=`date -d "-$i day" +%F`
	mkdir $DIR
	cd $DIR
	for n in {1..10};do
		touch $RANDOM.log
	done
	cd ..
done
2 移动到YYYY-MM/DD/下  
#!/bin/bash
#
DIR=/data/script39/test
cd $DIR
for DIR2 in * ;do 
	PDIR=`echo $DIR2 |cut -d"-" -f1,2`
	SUBDIR=`echo $DIR2 |cut -d"-" -f3`
	[ -d $PDIR/$SUBDIR ] || mkdir -p $PDIR/$SUBDIR  &> /dev/null
	mv $DIR2/*   $PDIR/$SUBDIR
done


for第二种语法
[root@centos8 script39]#cat for2.sh
#!/bin/bash
for ((sum=0,i=1;i<=100;i++));do
	let sum+=i
done
echo $sum



9x9乘法表
for((i=1;i<=9;i++));do
	for((j=1;j<=i;j++));do
		echo -e "${j}x${i}=$[i*j]\t\c"
	done
	echo 
done

[root@centos8 script39]#seq -s+ 1 2 100 
1+3+5+7+9+11+13+15+17+19+21+23+25+27+29+31+33+35+37+39+41+43+45+47+49+51+53+55+57+59+61+63+65+67+69+71+73+75+77+79+81+83+85+87+89+91+93+95+97+99
[root@centos8 script39]#seq -s+ 1 2 100 |bc
2500
[root@centos8 script39]#seq -s+ 2 2 100 |bc
2550


[root@centos8 script39]#cat for_while_sum.sh
#!/bin/bash
#
for((sum=0,i=1;i<=100;i+=2));do
	let sum+=i
done
echo $sum

sum=0
i=1
while [ $i -le 100 ];do
	let sum+=i
	let i+=2
done
echo $sum

sum=0
i=1
while [ $i -le 100 ];do
	[ $[i%2] -eq 1 ] && let sum+=i
	let i++
done
echo $sum

[root@centos8 script39]#echo a b c  | read i j k;echo i=$i;echo j=$j;echo k=$k
i=
j=
k=

[root@centos8 script39]#echo a b c  | { read i j k;echo i=$i;echo j=$j;echo k=$k; }
i=a
j=b
k=c
[root@centos8 script39]#echo a b c  | ( read i j k;echo i=$i;echo j=$j;echo k=$k; )
i=a
j=b
k=c

[root@centos8 script39]#echo a b c  | while read i j k; do echo i=$i;echo j=$j;echo k=$k;done
i=a
j=b
k=c

[root@centos8 script39]#echo a b c  | while read i ; do echo i=$i ;done
i=a b c

[root@centos8 script39]#unset i j k; echo "  a b c"  | while read i j k; do echo i=$i;echo j=$j;echo k=$k;done
i=a
j=b
k=c

[root@centos8 script39]#cat while_user.sh
#!/bin/bash
#
while read USER PASS;do
	useradd $USER
	echo $PASS | passwd --stdin $USER &> /dev/null
	echo "$USER is created"
done < user.txt


[root@centos8 script39]#cat select.sh 
#!/bin/bash
#
sum=0
PS3="请点菜(1-6): "
select MENU in 北京烤鸭 佛跳墙 小龙虾 羊蝎子 火锅 点菜结束;do
case $REPLY in 
1)
	echo $MENU price is 100 
	let sum+=100
	;;
2)
	echo $MENU price is 88 
	let sum+=88
	;;
3)
	echo $MENU price is 66 
	let sum+=66
	;;
4)
	echo $MENU price is 166 
	let sum+=166
	;;
5)
	echo $MENU price is 200 
	let sum+=200
	;;
6)
	echo "点菜结束,退出"
	break
	;;
*)
	echo "点菜错误，重新选择"
	;;
esac
done
echo sum=$sum

基例：
链条：

[root@centos8 ~]#paste 1.txt 2.txt | tr '\t' '\n' 
1
a
2
b
3
c
4
d
5
e

1 1
2 3 
3 5
4 7
5 9


[root@centos8 ~]#cat 1.txt
1
2
3
4
5
[root@centos8 ~]#cat 2.txt
a
b
c
d
e
[root@centos8 ~]#for i in `seq 1 $LINE`;do INSERT=`sed -n "${i}p" 2.txt`;sed -i "$[2*i-1] a $INSERT" 1.txt ; done
[root@centos8 ~]#cat 1.txt
1
a
2
b
3
c
4
d
5
e


生成10个随机数保存于数组中，并找出其最大值和最小值

1 2 3
4 5 6
7 8 9


matrix[11]=1
matrix[12]=2

GNU/linux 
minix 


[daemon]
AutomaticLoginEnable=true                                                                                             
AutomaticLogin=root


实验：rm -rf /boot 恢复之，centos6,7,8 

启动流程：
POST
BIOS选择启动硬件
MBR 446 grub stage1 
grub stage1.5 mbr 后续的sector 
grub stage 2 /boot/grub/grub.conf 
kernel /vmlinuz ro  root=/dev/sda2
initrd /initramfs.img 
/sbin/init 第一次进程 
/etc/inittab  3 
/etc/rc.d/rc.sysinit  /etc/fstab 
/etc/rc3.d/K,S ---> /etc/init.d/服务脚本 ： #chkconfig: 234 96 3 #description: test service 
/etc/rc.d/rc.local 最后执行启动脚本
/sbin/mingetty


实验: rm /sbin/init 恢复之

1 grub菜单
加 selinux=0 init=/bin/bash 

2 mount -o remount,rw /

3 mount /dev/sr0 /mnt/

4 rpm2cpio /mnt/Packages/upstart.xxx.rpm | cpio -idv ./sbin/init 

5 mv ./sbin/init /sbin/ 


实验： rm -rf /boot/*  /etc/fstab

1 rescue mode 恢复/etc/fstab 
找到/ 所在分区
fdisk -l 
mkdir /mnt/tmp
mount /dev/sdaN /mnt/tmp 
ls /mnt/tmp 
mount /dev/sda2  /mnt/tmp 
vim /mnt/tmp/etc/fstab 
/dev/sda1 /boot ext4 defaults 0 0 
/dev/sda2  /    ext4 defaults 0 0
/dev/sda3  /data ext4 defaults 0 0
/dev/sda5  swap swap defaults 0 0

reboot 

2 rescue mode 恢复内核和initrd 文件
/dev/sda2 --> /mnt/sysimage

chroot /mnt/sysimage
mount /dev/sr0 /mnt/
方法1 
rpm -ivh /mnt/Packages/kernel.xxxx.rpm --force  

方法2 
cp  /mnt/isolinux/vmlinuz  /boot/
mkinitrd  /boot/initramfs.img  `uname -r`

3 修复 grub 
grub-install /dev/sda 
vim /boot/grub/grub.conf 方法2
[root@centos6 ~]#cat /boot/grub/grub.conf 
default=0
timeout=5
title centos
kernel /vmlinuz root=/dev/sda2
initrd /initramfs.img 

4 reboot 

实验：自制Linux 

for i in /sys/class/scsi_host/host*/scan;do echo '- - -' > $i;done

实验：编译安装busybox 

实验：编译安装kernel-5.3.8 
dnf  install gcc make ncurses-devel flex bison openssl-devel elfutils-libelf-devel
tar xf linux-5.3.8.tar.xz
cd linux-5.3.8/
cp /boot/config-3.10.0-1062.el7.x86_64 .config
make menuconfig
make modules_install
make install

make[1]: *** No rule to make target 'certs/rhel.pem', needed by 'certs/x509_certificate_list'.  Stop


vim .config 
# CONFIG_MODULE_SIG is not set
CONFIG_SYSTEM_TRUSTED_KEYS=""
# CONFIG_DEBUG_INFO is not set

record  一行\n ;
field 列   

[root@centos8 ~]#df | awk -F" +|%" '{print $5}'
Use
0
0
2
0
6
1
15
1


[root@centos6 ~]#ifconfig | awk -F" +|:" 'NR==2{print $4 }'
192.168.39.6

[root@centos8 ~]#cat url.txt
http://www.baidu.com/index.html
http://mp3.baidu.com/1.mp3
http://map.baidu.com/
[root@centos8 ~]#awk -F"/" '{print $3}' url.txt 
www.baidu.com
mp3.baidu.com
map.baidu.com
[root@centos8 ~]#cut -d/ -f3 url.txt
www.baidu.com
mp3.baidu.com
map.baidu.com

[root@centos8 ~]#df | awk -F" +|%" '{print $1,$5}'
Filesystem Use
devtmpfs 0
tmpfs 0
tmpfs 2
tmpfs 0
/dev/sda2 6
/dev/sda5 1
/dev/sda1 15
tmpfs 1
[root@centos8 ~]#df | awk -F" +|%" '$5>=5 && $5<=15{print $1,$5}'
/dev/sda2 6
/dev/sda1 15


[root@centos8 ~]#df | awk -F" +|%" '$5>=5{print $1,$5};$5<=10{print $1,$5}'
Filesystem Use
devtmpfs 0
tmpfs 0
tmpfs 2
tmpfs 0
/dev/sda2 6
/dev/sda2 6
/dev/sda5 1
/dev/sda1 15
tmpfs 1

[root@centos8 ~]#df | awk -F" +|%" '$5>=5 || $5<=10{print $1,$5}'
Filesystem Use
devtmpfs 0
tmpfs 0
tmpfs 2
tmpfs 0
/dev/sda2 6
/dev/sda5 1
/dev/sda1 15
tmpfs 1
[root@centos8 ~]#df | awk -F" +|%" '$5>=5 && $5<=10{print $1,$5}'
/dev/sda2 6
[root@centos8 ~]#df | awk -F" +|%" '! $5>=5 {print $1,$5}'
[root@centos8 ~]#df | awk -F" +|%" '! ($5>=5) {print $1,$5}'
devtmpfs 0
tmpfs 0
tmpfs 2
tmpfs 0
/dev/sda5 1
tmpfs 1

[root@centos8 ~]#df | awk -F" +|%" 'NR!=1{$5>=5?DES="FULL":DES="NOT FULL";print DES,$5}'
NOT FULL 0
NOT FULL 0
NOT FULL 2
NOT FULL 0
FULL 6
NOT FULL 1
FULL 15
NOT FULL 1


for ip in `ss -nt| awk -F" +|:" 'NR!=1{print $6}'|sort |uniq -c|awk '$1>=3{print $2}'`;do 
iptables -A INPUT -s $ip -j REJECT
done

ss -nt| awk -F" +|:" 'NR!=1{print $6}'|sort |uniq -c|awk '$1>=3{print $2}'| while read ip ;do 
iptables -A INPUT -s $ip -j REJECT
done

[root@centos8 ~]#ss -nt| awk -F" +|:" 'NR!=1{print $6}'|sort |uniq -c|awk '$1>=3{print $2}'| while read ip ;do iptables -A INPUT -s $ip -j REJECT;done

[root@centos8 ~]#seq 10 | awk 'x=!x{print x}'
1
1
1
1
1
[root@centos8 ~]#seq 10 | awk 'x=!x'
1
3
5
7
9
[root@centos8 ~]#seq 10 | awk '!(x=!x)'
2
4
6
8
10
[root@centos8 ~]#seq 10 | awk -v x=1  'x=!x'
2
4
6
8
10
[root@centos8 ~]#seq 10 | awk -v x=2  'x=!x'
2
4
6
8
10
[root@centos8 ~]#seq 10 | awk '{i=!i;print i}'
1
0
1
0
1
0
1
0
1
0
[root@centos8 ~]#seq 10 | awk -v i=1 '{i=!i;print i}'
0
1
0
1
0
1
0
1
0
1


[root@centos8 ~]#seq 10 | sed -n '1~2p'
1
3
5
7
9
[root@centos8 ~]#seq 10 | sed -n '2~2p'
2
4
6
8
10

[root@centos8 ~]#awk '/^b/,/^f/' /etc/passwd
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
[root@centos8 ~]#sed -n '/^b/,/^f/p' /etc/passwd
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin

[root@centos8 ~]#seq 20 | sed -n '2,10p'
2
3
4
5
6
7
8
9
10
[root@centos8 ~]#seq 20 | awk 'NR>=2 && NR<=10'
2
3
4
5
6
7
8
9
10


df | awk -F" +|%" '/^\/dev\/sd/{if($5<=5)print "空间充裕",$5;else if($5<=10)print "空间正好",$5;else print"空间满了",$5}'

[root@centos8 ~]#df | awk -F" +|%" '/^\/dev\/sd/{if($5<=5){print "空间充裕",$5}else if($5<=10){print "空间正好",$5}else print"空间满了",$5}'
空间正好 6
空间充裕 1
空间满了 15


[root@centos8 ~]#awk 'BEGIN{i=1;sum=0;while(i<=100){sum+=i;i++};print sum}'
5050
[root@centos8 ~]#i=1;sum=0;while [ $i -le 100 ];do let sum+=i;let i++;done;echo $sum
5050

[root@centos8 ~]#awk -F"[ .]" '{print $2}' test.txt
www
blog
study

[root@centos8 ~]#awk -F, '{max=$1;min=$1;i=2;while (i<=NF){if($i>max){max=$i};if($i<min){min=$i};i++};print "max="max,"min="min }' test2.txt
max=32526 min=519


ss -nt| awk -F" +|:" 'NR!=1{print $6}'|sort |uniq -c|awk '$1>=3{print $2}'| while read ip ;do iptables -A INPUT -s $ip -j REJECT;done

[root@centos8 ~]#ss -nt | awk 'NR!=1{split($5,ip,":");count[ip[1]]++}END{for(i in count){if(count[i]>=3){system("iptables -A INPUT -s "i" -j REJECT")}}}'



[root@centos8 ~]#awk '{ip[$1]++}END{for(i in ip){print i":"ip[i]}}' access_log


[root@centos8 ~]#netstat -tan|awk '/^tcp/{state[$NF]++}END{for(i in state){print i,state[i]}}'
LISTEN 22
ESTABLISHED 11
[root@centos8 ~]#ss -nt |awk '/ESTAB/{split($5,ip,":");count[ip[1]]++}END{for(i in count){print i,count[i]}}'
172.20.3.69 1
192.168.39.1 4
172.20.3.80 6
172.20.3.142 1


[root@centos8 ~]#awk 'NR!=1{if($2=="m"){msum+=$3;mcount++}else{fsum+=$3;fcount++}}END{print "男生:"msum/mcount,"女生:"fsum/fcount}' score.txt 
男生:85 女生:96.5
[root@centos8 ~]#awk 'NR!=1{sum[$2]+=$3;count[$2]++}END{for(i in sum){print i,sum[i]/count[i]}}' score.txt 
m 85
f 96.5

传位于四阿哥
DDos


SQL注入

alice ----> bob 

data明文--加密key1--->data'密文---解密key2--->data

对称算法：key1=key2






不对称算法：key1 != key2


public:公开
secret：私有，不公开

Pa Sa 

Pb Sb 
{

alice ----> bob 
	  ----> jack 

Sa(data)

DES 1G 4m 8m
RSA 1G 1m 64hour


m%n=k k,n m?

hash(data)=digest 摘要

md5 128 
sha1 160

sha512 512 



Pb{Sa[hash(data)]+data}

Sa[hash(data)]+data
hash(data)==

Pa{Sa[hash(data)]}=hash(data)


key{Sa[hash(data)]+data}+Pb(key)

Sa[hash(data)]+data
hash(data)

hash(data)


useradd -p `echo centos | openssl passwd -6  -salt "u7yVtTHm7SvtB8PF" -stdin` alice
useradd -p `openssl passwd -6  -salt "u7yVtTHm7SvtB8PF" centos` jack

[ CA_default ]

dir             = /etc/pki/CA           # Where everything is kept
certs           = $dir/certs            # Where the issued certs are kept
crl_dir         = $dir/crl              # Where the issued crl are kept
database        = $dir/index.txt        # database index file.
#unique_subject = no                    # Set to 'no' to allow creation of
                                        # several certs with same subject.
new_certs_dir   = $dir/newcerts         # default place for new certs.

certificate     = $dir/cacert.pem       # The CA certificate
serial          = $dir/serial           # The current serial number
crlnumber       = $dir/crlnumber        # the current crl number
                                        # must be commented out to leave a V1 CRL
crl             = $dir/crl.pem          # The current CRL
private_key     = $dir/private/cakey.pem# The private key


实验：用脚本实现以下功能
create_ca.sh
create_crt.sh 

创建CA

mkdir /etc/pki/CA/{certs.newcerts,private} -pv
cd /etc/pki/CA
(umask 077;openssl genrsa -out private/cakey.pem 2048)
openssl req -new -x509 -key private/cakey.pem -out cacert.pem -days 3650 填写：国家，省份，城市，公司，部门，域名，邮箱
touch index.txt
echo 00 > serial 
echo 00 > crlnumber

证书请求
(umask 077;openssl genrsa -out /data/app.key 2048)
openssl req -new  -key /data/app.key -out /data/app.csr  填写：国家，省份，城市，公司，部门，域名，邮箱

颁发证书
openssl ca -in /data/app.csr -out /etc/pki/CA/certs/app.crt -days 100  


面试题 
export SSHPASS=123456
NET=192.168.39
for i in {1..254};do
    {
 	PASS=`openssl rand -base64 9`
	sshpass -e ssh $NET.$i "echo $PASS|passwd --stdin root &> /dev/null"
	echo $NET.$i:$PASS >>  host.txt
	}&
done
wait 

ssh-keygen  -P ""  -f /root/.ssh/id_rsa
sshpass  -p 123456 ssh-copy-id -i /root/.ssh/id_rsa.pub 192.168.39.7


批量部署基于key验证

NET=192.168.39
ssh-keygen  -P ""  -f /root/.ssh/id_rsa &> /dev/null
rpm -q sshpass &> /dev/null || yum -y install sshpass &> /dev/null
for i in {5..7};do
{
sshpass  -p 123456 ssh-copy-id -i /root/.ssh/id_rsa.pub $NET.$i &> /dev/null

}&
done
wait 

[root@centos8 ~]#crontab  -l
30 2 * * * /usr/bin/rsync  -av --delete /data/ 192.168.39.7:/data



yum install install sshfs

rpm -ql fuse-sshfs
sshfs 192.168.39.8:/data /mnt

pssh -h hostlist.txt     -i  "sed -i '/StrictHostKeyChecking/c StrictHostKeyChecking no' /etc/ssh/ssh_config"
[root@centos7 ~]#pssh -h hostlist.txt     -i  'echo $PATH'
[1] 10:16:51 [SUCCESS] 192.168.39.6
/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
[2] 10:16:51 [SUCCESS] 192.168.39.18
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
[3] 10:16:52 [SUCCESS] 192.168.39.8
/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin


[root@centos7 ~]#pssh -h hostlist.txt   -o /data/  'echo $PATH'
[1] 10:17:48 [SUCCESS] 192.168.39.6
[2] 10:17:48 [SUCCESS] 192.168.39.18
[3] 10:17:49 [SUCCESS] 192.168.39.8
[root@centos7 ~]#ls /data -l
total 20
-rw-r--r-- 1 root root  50 Nov  8 10:17 192.168.39.18
-rw-r--r-- 1 root root  83 Nov  8 10:17 192.168.39.6
-rw-r--r-- 1 root root  73 Nov  8 10:17 192.168.39.8

[root@centos7 ~]#pscp.pssh  -h hostlist.txt  /etc/centos-release  /data
[1] 10:20:27 [SUCCESS] 192.168.39.6
[2] 10:20:27 [SUCCESS] 192.168.39.18
[3] 10:20:27 [SUCCESS] 192.168.39.8

[root@centos7 ~]#pslurp  -h hostlist.txt  -L /data  /etc/centos-release version
[1] 10:23:11 [SUCCESS] 192.168.39.6
[2] 10:23:11 [SUCCESS] 192.168.39.18
[3] 10:23:11 [SUCCESS] 192.168.39.8
[root@centos7 ~]#ll /data
total 0
drwxr-xr-x 2 root root 21 Nov  8 10:23 192.168.39.18
drwxr-xr-x 2 root root 21 Nov  8 10:23 192.168.39.6
drwxr-xr-x 2 root root 21 Nov  8 10:23 192.168.39.8
[root@centos7 ~]#tree /data
/data
├── 192.168.39.18
│   └── version
├── 192.168.39.6
│   └── version
└── 192.168.39.8
    └── version

[root@centos6 ~]#read A B C <<< "1 2 3 "
[root@centos6 ~]#echo $A
1
[root@centos6 ~]#echo $B
2
[root@centos6 ~]#echo $C
3

实验：本地ssh端口转发
ssh -L 9527:192.168.39.18:23 192.168.39.7 -fN
telnet 127.0.0.1 9527 
data--->127.0.0.1:9527<----127.0.0.1:XXXX---ssh(data)<--->192.168.39.7:22--192.168.39.7:XXXX<----telnet--->192.168.39.18:23



实验：三台主机互为key验证

1 三台主机各个生成key pair
2 从三台主机复制到在其中一台主机authorized_keys ssh-copy-id三个IP
3 将authorized_keys复制到其它主机.ssh/


[root@centos8 ~]#lastb | awk '/ssh:notty/{ip[$3]++}END{for(i in ip){if(ip[i] >10)system("iptables -A INPUT -s "i" -j REJECT")}}'



./dropbearkey -t rsa -f dropbear_rsa_host_key


rsync 
pssh 
